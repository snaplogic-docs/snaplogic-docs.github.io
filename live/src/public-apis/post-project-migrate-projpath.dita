<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-US" id="post-project-migrate-projpath">

  <title>Migrate a Project to Another Org</title>

  <!-- <shortdesc><ph conref="#./ph-shortdesc"/></shortdesc> -->

  <conbody>

    <section>
      <p outputclass="shortsyntax">POST /project/migrate/{project_path}</p>
    </section>

    <section>
      <title>Overview</title>

      <p>This API <ph id="ph-shortdesc">migrates a SnapLogic Project from one Org to another.</ph></p>
    </section>


    <section>
      <title>Prerequisites</title>

      <ul>
        <li><ph conkeyref="k-api/ph-prereq-read-access-src-proj"/></li>
        <li><ph conkeyref="k-api/ph-prereq-write-access-tgt-org"/></li>
      </ul>
    </section>


    <section outputclass="tabs">
      <ul conkeyref="k-api/ul-tabmenu2"><li/></ul>
    </section>


    <section id="section-api-request" outputclass="api-request tabcontent">
      <!-- <title>Request</title> -->

      <codeblock id="codeblock-endpoint" outputclass="normalize-space lang-uri">
        <ph id="ph-method">POST</ph> <ph conkeyref="k-api/ph-endpoint-full-url"/><ph id="ph-sig">/project/migrate/{project_path}</ph>
      </codeblock>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Path Parameters</p>

        <table>
          <tgroup cols="2">
            <colspec colname="col-key"  colwidth="20%"/>
            <colspec colname="col-desc" colwidth="75%"/>
            <thead><row conkeyref="k-api/row-thead-key-desc"><entry/></row></thead>
            <tbody>
              <row conkeyref="k-api/row-pathparam-podpath"><entry/></row>
              <row conkeyref="k-api/row-pathparam-projpath"><entry/></row>
            </tbody>
          </tgroup>
        </table>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Query Parameters</p>
        <p>None.</p>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Request Header</p>
        <div conkeyref="k-api/div-auth-contenttype"/>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Request Body</p>

        <codeblock id="request-body" outputclass="normalize-space lang-json">
          {
            "dest_path" : "...",
            "asset_types" : [ ... ],
            "async" : ...,
            "duplicate_check" : ...
          }
        </codeblock>

        <table>
          <tgroup cols="3">
            <colspec colname="col-key"  colwidth="25%"/>
            <colspec colname="col-type" colwidth="15%"/>
            <colspec colname="col-desc" colwidth="60%"/>
            <thead conkeyref="k-misc/thead-key-type-desc"><row><entry/></row></thead>
            <tbody>
              <row>
                <entry><codeph>dest_path</codeph></entry>
                <entry>string</entry>
                <entry><ph conkeyref="k-misc/ph-reqd"/> The path to the destination Project.</entry>
              </row>
              <row>
                <entry><codeph>asset_types</codeph></entry>
                <entry>array</entry>
                <entry>Strings containing the types of assets to migrate.
                  <p><ph conkeyref="k-misc/ph-valid"/>
                    <ul>
                      <li><codeph>File</codeph></li>
                      <li><codeph>Job</codeph></li>
                      <li><codeph>Account</codeph></li>
                      <li><codeph>Pipeline</codeph></li>
                      <li><codeph>Policy</codeph></li>
                    </ul>
                  </p>
                </entry>
              </row>
              <row>
                <entry><codeph>async</codeph></entry>
                <entry>Boolean</entry>
                <entry>If <codeph>true</codeph>, the migration is done asynchronously.
                  <p>A response is immediately returned with <codeph>status_token</codeph> and <codeph>status_url</codeph>, which you can use to check on the status of the migration (<msgph>Started</msgph>, <msgph>Completed</msgph>, or <msgph>Failed</msgph>).</p>
                  <p><ph conkeyref="k-misc/ph-default"/> <codeph>true</codeph></p>
                </entry>
              </row>
              <row>
                <entry><codeph>duplicate_check</codeph></entry>
                <entry>Boolean</entry>
                <entry>
                  <p>If <codeph>true</codeph>, throws an exception if a project with the same name already exists at the specified path.</p>
                  <p>If <codeph>false</codeph>, overwrites any existing project with the same name at the specified path.</p>
                  <p><ph conkeyref="k-misc/ph-default"/> <codeph>true</codeph></p>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sectiondiv>
    </section>


    <section id="section-api-response" outputclass="api-response tabcontent">
      <!-- <title>Response</title> -->

      <sectiondiv>
        <p outputclass="sectiondivtitle">Response Header</p>
        <div conkeyref="k-api/div-table-status-code-only"/>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Response Body</p>

        <codeblock id="response-body" outputclass="normalize-space lang-json">
        </codeblock>
      </sectiondiv>
    </section>


    <section id="section-api-notes" outputclass="api-notes tabcontent">
      <!-- <title>Notes</title> -->

      <!-- From the old docs. -->

      <sectiondiv>
        <p outputclass="sectiondivtitle">Project Migration Guidelines</p>

        <ul>
          <li>The first migration to the destination Org creates a new Project if there is no conflict.
            However, the existing Project is overwritten if there is a conflict.
          </li>
          <li>When you include previously migrated accounts and Tasks in subsequent migrations, the API overwrites any changes that you may have manually made to the assets after the initial migration.</li>
          <li>If the account name is changed after the migration, you must update all references to that account in the Pipelines.</li>
          <li>Every time you migrate a Project, SnapLogic retains existing associations between Pipelines and Tasks if the associated Tasks are included in the migration.</li>
        </ul>
      </sectiondiv>
    </section>


    <!--
    <section id="section-api-examples" outputclass="api-examples tabcontent">
      <!- - <title>Example - </title> - ->

      (From the old docs)

      <sectiondiv>
        <p outputclass="sectiondivtitle">Sample Request</p>

        <codeblock outputclass="normalize-space lang-json">
          {
          "dest_path":"/<org_name>/<project_space>/<project_name>",
          "asset_types":["File","Job","Account","Pipeline"],
          "async_mode":"true",
          "duplicate_check":"false"
          }
        </codeblock>
        <p>When the async_mode parameter is set to true, the request returns immediately with status_token and status_url. </p>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Sample Response</p>

        <codeblock outputclass="normalize-space lang-json">
          {
          "response_map": {"status_token": "xxxxxxxxxxxxxx", "status_url": "https://<pod_name>/api/1/rest/public/project/migrate/<status_token>"} ,
          "http_status_code": 200
          }
        </codeblock>

        <p>The status URL is a public API that checks the migration status: Started, Completed, or Failed. If the status is Failed, then the response includes error messages.</p>

        <p>The following example shows a status document:</p>
        <codeblock outputclass="normalize-space lang-json">
          {
          "_id" : "a8f70684-f422-42ed-83d1-78fa3aa1759a",
          "status" : "Completed",
          "user_id" : "inttest@snaplogic.com",
          "src_path" : "exportorg/projects/acct",
          "create_time" : ISODate("2017-03-21T18:37:46.249Z"),
          "dest_path" : "/importorg/projects/acct",
          "asset_types" : [
          "File",
          "Job",
          "Account",
          "Pipeline"
          ],
          "successful" : [
          { "snode_id" : "58d172f773fe032daac6350c", "name" : "rest_account" }
          ,
          { "snode_id" : "58d172fa73fe032daac63510", "name" : "import_pipe" }
          ],
          "failed" : [ ],
          "warnings" : [ ]
          }
        </codeblock>
      </sectiondiv>


    </section>
    -->

  </conbody>

  <related-links/>

</concept>


<!--
Source: Tectonic\slserver\src\main\python\slserver\services\public\project_handler.py
Last refreshed: 20220419
        self.add_route('/migrate/<path:project_path>', self.migrate_project,
                       methods=[http_lib.HTTP_POST],
                       arguments=[
                           Argument('req', Argument.REQUEST),
                           Argument('project_path', Argument.URL),
                           Argument('dest_path', Argument.BODY),
                           Argument('asset_types', Argument.BODY),
                           Argument('async', Argument.BODY, Argument.BOOL),
                           Argument('duplicate_check', Argument.BODY, Argument.BOOL)
                       ])

Jiras: PLAT-8417, APIM-209
-->
