<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-US" id="get-runtime-org">

  <title>Retrieve Info About Tasks Matching a Filter</title>

  <!-- <shortdesc><ph conref="#./ph-shortdesc"/></shortdesc> -->

  <conbody>

    <section>
      <p outputclass="shortsyntax">GET /runtime/{org}</p>
    </section>

    <section>
      <title>Overview</title>

      <p>This API <ph id="ph-shortdesc">retrieves information about Task runs that match the specified filters.</ph></p>

    </section>


    <section>
      <title>Prerequisites</title>

      <ul>
        <li><ph conkeyref="k-api/ph-prereq-read-access"/></li>
      </ul>
    </section>


    <section outputclass="tabs">
      <ul conkeyref="k-api/ul-tabmenu2"><li/></ul>
    </section>


    <section id="section-api-request" outputclass="api-request tabcontent">
      <!-- <title>Request</title> -->

      <codeblock id="codeblock-endpoint" outputclass="normalize-space lang-uri">
        <ph id="ph-method">GET</ph> <ph conkeyref="k-api/ph-endpoint-full-url"/><ph id="ph-sig">/runtime/{org}</ph>?{query_parameters}
      </codeblock>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Path Parameters</p>

        <table>
          <tgroup cols="2">
            <colspec colname="col-key"  colwidth="20%"/>
            <colspec colname="col-desc" colwidth="75%"/>
            <thead><row conkeyref="k-api/row-thead-key-desc"><entry/></row></thead>
            <tbody>
              <row conkeyref="k-api/row-pathparam-podpath"><entry/></row>
              <row conkeyref="k-api/row-pathparam-org"><entry/></row>
            </tbody>
          </tgroup>
        </table>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Query Parameters</p>

        <note type="note">If a timespan is not set, this API returns information about Task runs within the last hour.</note>

        <table>
          <tgroup cols="3">
            <colspec colname="col-key"  colwidth="25%"/>
            <colspec colname="col-type" colwidth="15%"/>
            <colspec colname="col-desc" colwidth="60%"/>
            <thead conkeyref="k-misc/thead-key-type-desc"><row><entry/></row></thead>
            <tbody>
              <row>
                <entry><codeph>plex_label</codeph></entry>
                <entry>string</entry>
                <entry>Returns information about Task runs for the specified Snaplex.</entry>
              </row>
              <row>
                <entry><codeph>cc_label</codeph></entry>
                <entry>string</entry>
                <entry>Returns information about Task runs for the specified CC label (JCC node’s hostname).</entry>
              </row>
              <row>
                <entry><codeph>pipe_name</codeph></entry>
                <entry>string</entry>
                <entry>Returns information about Task runs for the specified Pipeline.</entry>
              </row>
              <row>
                <entry><codeph>user_id</codeph></entry>
                <entry>string</entry>
                <entry>Returns information about Task runs triggered by the specified user.</entry>
              </row>
              <row>
                <entry><codeph>state</codeph></entry>
                <entry>string</entry>
                <entry>Returns information about Task runs in the specified state.
                  <p><ph conkeyref="k-misc/ph-valid"/>
                    <ul>
                      <li><codeph>Queued</codeph> – Task is queued for processing; all Tasks start in this state.</li>
                      <li><codeph>NoUpdate</codeph> – Intermediate state at startup.</li>
                      <li><codeph>Prepared</codeph> – Task has been prepared.</li>
                      <li><codeph>Started</codeph> – Task has started running.</li>
                      <li><codeph>Completed</codeph> – Task has completed successfully.</li>
                      <li><codeph>Failing</codeph> – Task encountered an error and is waiting for Snaps to complete execution before moving to the Failed state.</li>
                      <li><codeph>Failed</codeph> – Task failed.</li>
                      <li><codeph>Stopped</codeph> – Task was stopped either by the user or by the system, as indicated by the "stopper" key.</li>
                      <li><codeph>Stopping</codeph> – Task is stopping.</li>
                      <li><codeph>Suspending</codeph> – Resumable Task encountered an error and is storing its state.</li>
                      <li><codeph>Suspended</codeph> – Resumable Task encountered an error and is suspended.</li>
                      <li><codeph>Resuming</codeph> – Resumable Task is loading its state and will resume execution where it left off.</li>
                    </ul>
                  </p>
                  <p><ph conkeyref="k-misc/ph-default"/> <codeph>Started</codeph></p>
                </entry>
              </row>
              <row>
                <entry><codeph>invoker</codeph></entry>
                <entry>string</entry>
                <entry>Returns information about Task runs that were invoked in the specified way.
                  <p><ph conkeyref="k-misc/ph-valid"/>
                    <ul>
                      <li><codeph>triggered</codeph> – Triggered Tasks</li>
                      <li><codeph>scheduled</codeph> – Scheduled Tasks</li>
                      <li><codeph>always_on</codeph> – Ultra Tasks</li>
                      <li><codeph>manual</codeph> – User-triggered Tasks</li>
                    </ul>
                  </p>
                  <p><ph conkeyref="k-misc/ph-default"/> <codeph>scheduled</codeph></p>
                </entry>
              </row>
              <row>
                <entry><codeph>project_path</codeph></entry>
                <entry>string</entry>
                <entry>Returns information about Task runs for the specified project.
                  <p>Allowed formats:
                    <ul>
                      <li><codeph>/{org}/projects/{project_name}</codeph></li>
                      <li><codeph>/{org}/shared</codeph></li>
                    </ul>
                  </p>
                </entry>
              </row>
              <row>
                <entry><codeph>last_hours</codeph></entry>
                <entry>integer</entry>
                <entry>Returns information about Task runs within the specified number of hours, counting backwards from the current time.
                  <p><ph conkeyref="k-misc/ph-valid"/> 1 to 1080 hours (45 days)</p>
                  <p><ph conkeyref="k-misc/ph-default"/> 1</p>
                </entry>
              </row>
              <row>
                <entry><codeph>start</codeph></entry>
                <entry>integer</entry>
                <entry>Returns information about Task runs since the specified time. <ph conkeyref="k-api/ph-unixtime-millisecs"/></entry>
              </row>
              <row>
                <entry><codeph>end</codeph></entry>
                <entry>integer</entry>
                <entry>Returns information about Task runs before the specified time. <ph conkeyref="k-api/ph-unixtime-millisecs"/></entry>
              </row>
              <row conkeyref="k-api/row-query-param-runtime-limit"><entry/></row>
              <row conkeyref="k-api/row-query-param-offset"><entry/></row>
            </tbody>
          </tgroup>
        </table>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Request Header</p>
        <div conkeyref="k-api/div-auth-contenttype"/>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Request Body</p>
        <p>None.</p>
      </sectiondiv>
    </section>


    <section id="section-api-response" outputclass="api-response tabcontent">
      <!-- <title>Response</title> -->

      <sectiondiv>
        <p outputclass="sectiondivtitle">Response Header</p>
        <div conkeyref="k-api/div-table-status-code-only"/>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Response Body</p>

        <codeblock outputclass="normalize-space lang-json">
        {
          "response_map": {
            "entries": [ ... ],
            "total": ...,
            "limit": ...,
            "offset": ...
          },
          "http_status_code": 200
        }
        </codeblock>

        <table>
          <tgroup cols="3">
            <colspec colname="col-key"  colwidth="25%"/>
            <colspec colname="col-type" colwidth="15%"/>
            <colspec colname="col-desc" colwidth="60%"/>
            <thead conkeyref="k-misc/thead-key-type-desc"><row><entry/></row></thead>
            <tbody>
              <row>
                <entry><codeph>entries</codeph></entry>
                <entry>array</entry>
                <entry><ph conkeyref="k-api/ph-response-array-task-metadata"/></entry>
              </row>
              <row conkeyref="k-api/row-response-total"><entry/></row>
              <row conkeyref="k-api/row-response-limit"><entry/></row>
              <row conkeyref="k-api/row-response-offset"><entry/></row>
            </tbody>
          </tgroup>
        </table>

      </sectiondiv>
    </section>


    <!--
    <section id="section-api-notes" outputclass="api-notes tabcontent">
      <!- - <title>Notes</title> - ->
    </section>


    <section id="section-api-examples" outputclass="api-examples tabcontent">
      <!- - <title>Example - </title> - ->
    </section>
    -->

  </conbody>

  <related-links/>

</concept>


<!--
Source: Tectonic\slserver\src\main\python\slserver\services\public\runtime_handler.py
Last refreshed: 20220419
        self.add_route('/<organization>', self.get_summary,
                       methods=[http_lib.HTTP_GET],
                       arguments=[
                           Argument('caller', Argument.USER_ID),
                           Argument('organization', Argument.URL),
                           Argument('start', Argument.QS, Argument.INT),
                           Argument('end', Argument.QS, Argument.INT),
                           Argument('last_hours', Argument.QS, Argument.INT),
                           Argument('offset', Argument.QS, Argument.INT),
                           Argument('limit', Argument.QS, Argument.INT),
                           Argument('plex_label', Argument.QS),
                           Argument('cc_label', Argument.QS),
                           Argument('pipe_name', Argument.QS),
                           Argument('user_id', Argument.QS),
                           Argument('state', Argument.QS),
                           Argument('invoker', Argument.QS),
                           Argument('project_path', Argument.QS),
                           ])

Jiras: PLAT-8417
-->
