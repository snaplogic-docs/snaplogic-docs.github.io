<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-US" id="get-log-org">

  <title>Retrieve Pipeline Logs</title>

  <!-- <shortdesc><ph conref="#./ph-shortdesc"/></shortdesc> -->

  <conbody>

    <section>
      <p outputclass="shortsyntax">GET /log/{org}</p>
    </section>

    <section>
      <title>Overview</title>

      <p>This API <ph id="ph-shortdesc">retrieves the Pipeline log information for the specified Org.</ph></p>
    </section>


    <section>
      <title>Prerequisites</title>

      <ul>
        <li><ph conkeyref="k-api/ph-prereq-read-access"/></li>
      </ul>
    </section>


    <section outputclass="tabs">
      <ul conkeyref="k-api/ul-tabmenu2"><li/></ul>
    </section>


    <section id="section-api-request" outputclass="api-request tabcontent">
      <!-- <title>Request</title> -->

      <codeblock id="codeblock-endpoint" outputclass="normalize-space lang-uri">
        <ph id="ph-method">GET</ph> <ph conkeyref="k-api/ph-endpoint-full-url"/><ph id="ph-sig">/log/{org}</ph>?{query_parameters}
      </codeblock>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Path Parameters</p>

        <table>
          <tgroup cols="2">
            <colspec colname="col-key"  colwidth="20%"/>
            <colspec colname="col-desc" colwidth="75%"/>
            <thead><row conkeyref="k-api/row-thead-key-desc"><entry/></row></thead>
            <tbody>
              <row conkeyref="k-api/row-pathparam-podpath"><entry/></row>
              <row conkeyref="k-api/row-pathparam-org"><entry/></row>
            </tbody>
          </tgroup>
        </table>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Query Parameters</p>

        <table>
          <tgroup cols="3">
            <colspec colname="col-key"  colwidth="25%"/>
            <colspec colname="col-type" colwidth="15%"/>
            <colspec colname="col-desc" colwidth="60%"/>
            <thead conkeyref="k-misc/thead-key-type-desc"><row><entry/></row></thead>
            <tbody>
              <row>
                <entry><codeph>ruuid</codeph></entry>
                <entry>string</entry>
                <entry><ph conkeyref="k-misc/ph-reqd"/> Returns log information about the task with the specified runtime ID.</entry>
              </row>
              <row>
                <entry><codeph>log_level</codeph></entry>
                <entry>string</entry>
                <entry>Returns log information at the specified level of detail.
                  <p><ph conkeyref="k-misc/ph-valid"/>
                    <ul>
                      <li><codeph>error</codeph> – Returns error logs only.</li>
                      <li><codeph>warn</codeph> –  Returns both warning logs and error logs.</li>
                      <li><codeph>info</codeph> –  Returns all logged information, including warning logs and error logs.</li>
                    </ul>
                  </p>
                  <p><ph conkeyref="k-misc/ph-default"/> <codeph>info</codeph></p>
                </entry>
              </row>
              <row conkeyref="k-api/row-query-param-limit"><entry/></row>

              <!-- The following are no longer used because they are not used in the call to get_pipeline_logs_from_cc: ccid (JCC node ID), logtype, start, end, offset.
                    self.log_manager.get_pipeline_logs_from_cc(user_id, ruuid, log_level, limit=limit)
                   Therefore, no pagination for /log.
              <row>
                <entry><codeph>cc_id</codeph></entry>
                <entry>string</entry>
                <entry>The ID of the JCC node.</entry>
              </row>
              <row>
                <entry><codeph>log_type</codeph></entry>
                <entry>string</entry>
                <entry>Returns logs of the specified type.
                  <p><ph conkeyref="k-misc/ph-valid"/> ??? </p>
                  <p><ph conkeyref="k-misc/ph-default"/> <codeph>???</codeph></p>
                </entry>
              </row>
              <row>
                <entry><codeph>start</codeph></entry>
                <entry>integer</entry>
                <entry>Returns log entries since the specified time. <ph conkeyref="k-api/ph-unixtime-millisecs"/></entry>
              </row>
              <row>
                <entry><codeph>end</codeph></entry>
                <entry>integer</entry>
                <entry>Returns log entries before the specified time. <ph conkeyref="k-api/ph-unixtime-millisecs"/></entry>
              </row>
              <row conkeyref="k-api/row-query-param-offset"><entry/></row>
              -->

            </tbody>
          </tgroup>
        </table>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Request Header</p>
        <div conkeyref="k-api/div-auth-contenttype"/>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Request Body</p>
        <p>None.</p>
      </sectiondiv>
    </section>


    <section id="section-api-response" outputclass="api-response tabcontent">
      <!-- <title>Response</title> -->

      <sectiondiv>
        <p outputclass="sectiondivtitle">Response Header</p>
        <div conkeyref="k-api/div-table-status-code-only"/>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Response Body</p>

        <codeblock outputclass="normalize-space lang-json">
          {
            "response_map": {
              "extra": {},
              "total": ...,
              "entries": [
                {
                  "_source": {
                    "msg": "...",
                    "lvl": "...",
                    "ts": "...",
                    "prc": "...",
                    "fi": "..."
                  }
                },
                ...
                {
                  "_source": {
                    "xid": "...",
                    "snrd": "...",
                    "prc": "...",
                    "linid": "...",
                    "ts": "...",
                    "plrd": "...",
                    "fi": "...",
                    "msg": "...",
                    "lvl": "...",
                    "snlb": "...",
                    "exc": "..."
                  }
                }
              ]
            },
            "http_status_code": 200
          }
        </codeblock>

        <table>
          <tgroup cols="3">
            <colspec colname="col-key"  colwidth="25%"/>
            <colspec colname="col-type" colwidth="15%"/>
            <colspec colname="col-desc" colwidth="60%"/>
            <thead conkeyref="k-misc/thead-key-type-desc"><row><entry/></row></thead>
            <tbody>
              <row>
                <entry><codeph>extra</codeph></entry>
                <entry>object</entry>
                <entry>???</entry>
              </row>
              <row>
                <entry><codeph>total</codeph></entry>
                <entry>integer</entry>
                <entry>The number of log entries returned.</entry>
              </row>
              <row>
                <entry><codeph>entries</codeph></entry>
                <entry>array</entry>
                <entry>An array of objects containing metadata about each log entry.
                  <ul>
                    <li><codeph>msg</codeph>. The message in the log.</li>
                    <li><codeph>lvl</codeph>. The type of the log entry. Possible values:
                      <ul>
                        <li><codeph>INFO</codeph></li>
                        <li><codeph>WARN</codeph></li>
                        <li><codeph>ERROR</codeph></li>
                      </ul>
                    </li>
                    <li><codeph>ts</codeph>. The timestamp of the entry. Format: UTC</li>
                    <li><codeph>prc</codeph>. The process that was logged.</li>
                    <li><codeph>fi</codeph>. The line in the code that generated the log entry.</li>
                  </ul>
                  <p>If <codeph>lvl</codeph> is <codeph>ERROR</codeph>:</p>
                  <ul>
                    <li><codeph>xid</codeph>. The transaction ID.</li>
                    <li><codeph>snrd</codeph>. The Snap runtime ID.</li>
                    <li><codeph>linid</codeph>. ???</li>
                    <li><codeph>plrd</codeph>. The Pipeline runtime ID.</li>
                    <li><codeph>snlb</codeph>. The Snap label or name.</li>
                    <li><codeph>exc</codeph>. Any exception that occurred.</li>
                  </ul>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>

      </sectiondiv>
    </section>


    <!--
    <section id="section-api-notes" outputclass="api-notes tabcontent">
      <!- - <title>Notes</title> - ->
    </section>


    <section id="section-api-examples" outputclass="api-examples tabcontent">
      <!- - <title>Example - </title> - ->
    </section>
    -->

  </conbody>

  <related-links/>

</concept>


<!--
Source: Tectonic\slserver\src\main\python\slserver\services\public\public_log_handler.py
Last refreshed: 20220419
        self.add_route('<organization>', self.get_pipeline_logs,
                       methods=[http_lib.HTTP_GET],
                       arguments=[
                           Argument('organization', Argument.URL),
                           Argument('user_id', Argument.USER_ID),
                           Argument('start', Argument.QS),
                           Argument('end', Argument.QS),
                           Argument('ruuid', Argument.QS),
                           Argument('cc_id', Argument.QS),
                           Argument('log_type', Argument.QS),
                           Argument('log_level', Argument.QS),
                           Argument('offset', Argument.QS, Argument.INT),
                           Argument('limit', Argument.QS, Argument.INT)
                       ])

Jiras: PLAT-8417
-->
