<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-US" id="get-activities-org">

  <title>Retrieve Activities in Org</title>

  <!-- <shortdesc><ph conref="#./ph-shortdesc"/></shortdesc> -->

  <conbody>

    <section>
      <p outputclass="shortsyntax">GET /activities/{org}</p>
    </section>

    <section>
      <title>Overview</title>

      <p>This API <ph id="ph-shortdesc">retrieves information about activities performed within an organization.</ph></p>
      <p>You can filter the results based on one or more of the following criteria:
        <ul>
          <li>project space</li>
          <li>project</li>
          <li>asset</li>
          <li>asset_type</li>
          <li>user</li>
          <li>event_type</li>
          <li>alert_state</li>
          <li>is_alert</li>
          <li>start</li>
          <li>end</li>
          <li>offset</li>
          <li>limit</li>
        </ul>
      </p>
    </section>


    <section>
      <title>Prerequisites</title>

      <ul>
        <li><ph conkeyref="k-api/ph-prereq-read-access"/></li>
      </ul>
    </section>


    <section outputclass="tabs">
      <ul conkeyref="k-api/ul-tabmenu2"><li/></ul>
    </section>


    <section id="section-api-request" outputclass="api-request tabcontent">
      <!-- <title>Request</title> -->

      <codeblock id="codeblock-endpoint" outputclass="normalize-space lang-uri">
        <ph id="ph-method">GET</ph> <ph conkeyref="k-api/ph-endpoint-full-url"/><ph id="ph-sig">/activities/{org}</ph>?{query_parameters}
      </codeblock>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Path Parameters</p>

        <table>
          <tgroup cols="2">
            <colspec colname="col-key"  colwidth="20%"/>
            <colspec colname="col-desc" colwidth="75%"/>
            <thead><row conkeyref="k-api/row-thead-key-desc"><entry/></row></thead>
            <tbody>
              <row conkeyref="k-api/row-pathparam-podpath"><entry/></row>
              <row conkeyref="k-api/row-pathparam-org"><entry/></row>
            </tbody>
          </tgroup>
        </table>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Query Parameters</p>

        <table>
          <tgroup cols="3">
            <colspec colname="col-key" colwidth="25%"/>
            <colspec colname="col-type" colwidth="15%"/>
            <colspec colname="col-desc" colwidth="60%"/>
            <thead conkeyref="k-misc/thead-key-type-desc"><row><entry/></row></thead>
            <tbody>
              <row>
                <entry><codeph>filter_project_space</codeph></entry>
                <entry>string</entry>
                <entry>Returns activities related to a project space.</entry>
              </row>
              <row>
                <entry><codeph>filter_project</codeph></entry>
                <entry>string</entry>
                <entry>Returns activities related to a project.
                  Requires <codeph>filter_project_space</codeph>.
                  <p><ph conkeyref="k-misc/ph-example"/> <codeph>filter_project_space=myProjSpace&amp;filter_project=My%20Test%20Project</codeph></p>
                </entry>
              </row>
              <row>
                <entry><codeph>filter_asset</codeph></entry>
                <entry>string</entry>
                <entry>Returns activities related to the specified asset.
                  Requires <codeph>filter_project_space</codeph> and <codeph>filter_ project</codeph>.
                  <p><ph conkeyref="k-misc/ph-example"/> <codeph>filter_asset_type=File&amp;filter_asset=Sales2021Dec.csv</codeph></p>
                </entry>
              </row>
              <row>
                <entry><codeph>filter_asset_type</codeph></entry>
                <entry>string</entry>
                <entry>Returns activities related to specific type of assets.
                  <p><ph conkeyref="k-misc/ph-valid"/>
                    <ul>
                      <li><codeph>Account</codeph></li>
                      <li><codeph>File</codeph></li>
                      <li><codeph>Org</codeph></li>
                      <li><codeph>Pipeline</codeph></li>
                      <li><codeph>Plex</codeph></li>
                    </ul>
                  </p>
                  <p><ph conkeyref="k-misc/ph-example"/> <codeph>filter_asset_type=File</codeph></p>
                </entry>
              </row>
              <row>
                <entry><codeph>filter_user</codeph></entry>
                <entry>string</entry>
                <entry>Returns activities related to a user.</entry>
              </row>
              <row>
                <entry><codeph>filter_event_type</codeph></entry>
                <entry>CSV string</entry>
                <entry>Returns activities of a one or more event types separated by comma.</entry>
              </row>
              <row>
                <entry><codeph>filter_alert_state</codeph></entry>
                <entry>string</entry>
                <entry>Returns activities that match the specified alert state.
                  <p><ph conkeyref="k-misc/ph-valid"/>
                    <ul>
                      <li><codeph>open</codeph> indicates that a potential issue in the activity must be investigated.</li>
                      <li><codeph>closed</codeph> indicates that an issue occurred in the activity and has been automatically resolved.</li>
                    </ul>
                  </p>
                </entry>
              </row>
              <row>
                <entry><codeph>filter_is_alert</codeph></entry>
                <entry>Boolean</entry>
                <entry>If <codeph>true</codeph>, returns activities that are alerts;
                  otherwise, returns activities that are not alerts.
                </entry>
              </row>
              <row>
                <entry><codeph>filter_snaplogic_admin_update</codeph></entry>
                <entry>Boolean</entry>
                <entry>If <codeph>true</codeph>, returns activities that were initiated by a SnapLogic process.</entry>
              </row>
              <row>
                <entry><codeph>start</codeph></entry>
                <entry>integer</entry>
                <entry>Returns activities that occurred since the specified timestamp. <ph conkeyref="k-api/ph-unixtime-millisecs"/></entry>
              </row>
              <row>
                <entry><codeph>end</codeph></entry>
                <entry>integer</entry>
                <entry>Returns activities that occurred before the specified timestamp. <ph conkeyref="k-api/ph-unixtime-millisecs"/></entry>
              </row>
              <row conkeyref="k-api/row-query-param-limit"><entry/></row>
              <row conkeyref="k-api/row-query-param-offset"><entry/></row>
            </tbody>
          </tgroup>
        </table>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Request Header</p>
        <div conkeyref="k-api/div-auth-contenttype"/>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Request Body</p>
        <p>None.</p>
      </sectiondiv>
    </section>


    <section id="section-api-response" outputclass="api-response tabcontent">
      <!-- <title>Response</title> -->

      <sectiondiv>
        <p outputclass="sectiondivtitle">Response Header</p>
        <div conkeyref="k-api/div-table-status-code-only"/>
      </sectiondiv>

      <sectiondiv>
        <p outputclass="sectiondivtitle">Response Body</p>

        <codeblock id="response-body" outputclass="normalize-space lang-json">
          {
            "total": ...,
            "offset": ...,
            "limit": ...,
            "entries": [ ... ]
          }
        </codeblock>

        <table>
          <tgroup cols="3">
            <colspec colname="col-key"  colwidth="25%"/>
            <colspec colname="col-type" colwidth="15%"/>
            <colspec colname="col-desc" colwidth="60%"/>
            <thead conkeyref="k-misc/thead-key-type-desc"><row><entry/></row></thead>
            <tbody>
              <row conkeyref="k-api/row-response-total"><entry/></row>
              <row conkeyref="k-api/row-response-offset"><entry/></row>
              <row conkeyref="k-api/row-response-limit"><entry/></row>
              <row>
                <entry><codeph>entries</codeph></entry>
                <entry>array</entry>
                <entry>
                  <ph conkeyref="k-api/ph-response-array-activity-metadata"/>
                  <ph conkeyref="k-api/ph-response-object-varies-by-event-type"/>
                  <p>Learn more: <xref href="ref-activity-metadata.dita"/></p>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>

      </sectiondiv>
    </section>


    <section id="section-api-notes" outputclass="api-notes tabcontent">
      <!-- <title>Notes</title> -->

      <p>The activity logs capture the following events:
        <ul>
          <li>session_start</li>
          <li>session_end</li>
          <li>user_create</li>
          <li>user_delete</li>
          <li>user_auth_failure</li>
          <li>user_lockout</li>
          <li>user_unlock</li>
          <li>password_change</li>
          <li>password_reset</li>
          <li>asset_create</li>
          <li>asset_update</li>
          <li>asset_delete</li>
          <li>asset_rename</li>
          <li>asset_owner_change</li>
          <li>asset_move</li>
          <li>acl_add</li>
          <li>acl_remove</li>
          <li>plex_node_add</li>
          <li>plex_node_restart</li>
          <li>dist_change</li>
          <li>dist_override</li>
          <li>group_create</li>
          <li>group_delete</li>
          <li>group_update</li>
          <li>plex_congestion</li>
          <li>plex_node_enter_maintenance_mode</li>
          <li>plex_node_leave_maintenance_mode</li>
        </ul>
      </p>
    </section>


    <!--
    <section id="section-api-examples" outputclass="api-examples tabcontent">
      <!- - <title>Example - </title> - ->

      <p>Response body:</p>
      <codeblock outputclass="normalize-space lang-json">
        {
          "total": 33,
          "offset": 0,
          "limit": 100,
          "entries": [
            {
              "by_whom": "currentuser@example.com",
              "user_id": "currentuser@example.com",
              "event_type": "session_start",
              "snaplogic_admin_update": false,
              "create_time": "2022-01-07T20:23:40.014000+00:00",
              "template": "%(user_id)s started the session from IP %(ip_address)s in organization %(org_label)s",
              "_id": "...",
              "ip_address": "...",
              "org_label": "myorgname"
            },
            {
              "asset_path": "/myorgname/shared/Cloud",
              "project_label": "shared",
              "event_type": "plex_node_add",
              "asset_label": "Cloud",
              "parent_type": "Project",
              "org_label": "myorgname",
              "parent_path": "/myorgname/shared",
              "create_time": "2022-01-07T00:41:52.908000+00:00",
              "by_whom": "cc+myorgname@example.com",
              "template": "%(by_whom)s added snaplex node %(cc_label)s in organization %(org_label)s",
              "_id": "...",
              "ip_address": "...",
              "asset_type": "Plex",
              "display_type": "Snaplex"
            },
            {
              "asset_path": "/myorgname/shared/Cloud",
              "project_label": "shared",
              "event_type": "asset_update",
              "parent_type": "Project",
              "org_label": "myorgname",
              "parent_path": "/myorgname/shared",
              "create_time": "2022-01-07T00:36:04.524000+00:00",
              "by_whom": "currentuser@example.com",
              "template": "%(by_whom)s updated the %(display_type)s %(asset_label)s under %(parent_type)s %(parent_path)s in organization %(org_label)s",
              "_id": "...",
              "asset_label": "Cloud",
              "asset_type": "Plex",
              "display_type": "Snaplex"
            },
            {
              "org_label": "myorgname",
              "event_type": "group_update",
              "group_name": "admins",
              "by_whom": "currentuser@example.com",
              "create_time": "2022-01-06T19:04:08.223000+00:00",
              "template": "%(by_whom)s updated the group %(group_name)s in organization %(org_label)s",
              "_id": "...",
            },
            {
              "by_whom": "currentuser@example.com",
              "user_id": "johndoe@example.com",
              "event_type": "org_add_user",
              "snaplogic_admin_update": false,
              "create_time": "2022-01-06T19:03:34.127000+00:00",
              "template": "%(by_whom)s added user %(user_id)s to organization %(org_label)s",
              "_id": "...",
              "org_label": "myorgname"
            },
            {
              "asset_path": "/myorgname/projects/John Doe",
              "project_label": "John Doe",
              "event_type": "acl_add",
              "parent_type": "Project Space",
              "perm": {
                "perms": [
                  "R",
                  "W",
                  "X"
                ],
                "subject_type": "USER",
                "inherit": true,
                "subject": "johndoe@example.com"
              },
              "perms_subject": "johndoe@example.com",
              "org_label": "myorgname",
              "parent_path": "/myorgname/projects",
              "create_time": "2022-01-06T19:03:34.097000+00:00",
              "by_whom": "currentuser@example.com",
              "template": "%(by_whom)s added %(perms_entry)s permission to %(asset_path)s for %(perms_subject)s in organization %(org_label)s",
              "perms_entry": "Full Access",
              "_id": "...",
              "asset_label": "John Doe",
              "asset_type": "Dir",
              "partition_label": "projects",
              "display_type": "Project"
            },
            {
              "asset_path": "/myorgname/projects/John Doe",
              "project_label": "John Doe",
              "event_type": "asset_create",
              "parent_type": "Project Space",
              "org_label": "myorgname",
              "parent_path": "/myorgname/projects",
              "create_time": "2022-01-06T19:03:34.066000+00:00",
              "by_whom": "currentuser@example.com",
              "template": "%(by_whom)s created the %(display_type)s %(asset_label)s under %(parent_type)s %(parent_path)s in organization %(org_label)s",
              "_id": "...",
              "asset_label": "John Doe",
              "asset_type": "Dir",
              "partition_label": "projects",
              "display_type": "Project"
            },
            {
              "asset_path": "/myorgname/shared/Cloud",
              "project_label": "shared",
              "event_type": "asset_update",
              "parent_type": "Project",
              "org_label": "myorgname",
              "parent_path": "/myorgname/shared",
              "create_time": "2022-01-06T19:01:36.442000+00:00",
              "by_whom": "currentuser@example.com",
              "template": "%(by_whom)s updated the %(display_type)s %(asset_label)s under %(parent_type)s %(parent_path)s in organization %(org_label)s",
              "_id": "...",
              "asset_label": "Cloud",
              "asset_type": "Plex",
              "display_type": "Snaplex"
            },
            {
              "asset_path": "/myorgname/shared/Cloud",
              "project_label": "shared",
              "event_type": "acl_add",
              "parent_type": "Project",
              "perm": {
                "perms": [
                  "R"
                ],
                "subject_type": "USER",
                "inherit": false,
                "subject": "cc+myorgname@example.com"
              },
              "perms_subject": "cc+myorgname@example.com",
              "org_label": "myorgname",
              "parent_path": "/myorgname/shared",
              "create_time": "2022-01-06T19:01:34.554000+00:00",
              "by_whom": "currentuser@example.com",
              "template": "%(by_whom)s added %(perms_entry)s permission to %(asset_path)s for %(perms_subject)s in organization %(org_label)s",
              "perms_entry": "Read Only",
              "_id": "...",
              "asset_label": "Cloud",
              "asset_type": "Plex",
              "display_type": "Snaplex"
            },
            {
              "asset_path": "/myorgname/shared",
              "project_label": "shared",
              "event_type": "asset_create",
              "parent_type": "Org",
              "org_label": "myorgname",
              "parent_path": "/myorgname",
              "create_time": "2022-01-06T19:01:11.965000+00:00",
              "by_whom": "admin@snaplogic.com",
              "template": "%(by_whom)s created the %(display_type)s %(asset_label)s under %(parent_type)s %(parent_path)s in organization %(org_label)s",
              "_id": "...",
              "asset_label": "shared",
              "asset_type": "Dir",
              "display_type": "Project"
            },
            ...
          ]
        }
      </codeblock>
    </section>
    -->

  </conbody>

  <related-links>
    <link scope="external" format="html" href="https://docs-snaplogic.atlassian.net/wiki/spaces/SD/pages/1438857/Activity+Log">
      <linktext>Activity Log</linktext>
    </link>
  </related-links>

</concept>


<!--
Source: Tectonic\sldb\src\main\python\sldb\services\public\activity_handler.py
Last refreshed: 20211223
        self.add_route('/<organization>', self.get_activity,
                       methods=[slcommon.snap_http_lib.HTTP_GET],
                       arguments=[
                           Argument('organization', Argument.URL),
                           Argument('req', Argument.REQUEST),
                           Argument('filter_project', Argument.QS),
                           Argument('filter_project_space', Argument.QS),
                           Argument('filter_asset', Argument.QS),
                           Argument('filter_user', Argument.QS),
                           Argument('filter_event_type', Argument.QS),
                           Argument('filter_asset_type', Argument.QS),
                           Argument('filter_is_alert', Argument.QS, Argument.BOOL),
                           Argument('filter_alert_state', Argument.QS),
                           Argument('filter_snaplogic_admin_update', Argument.QS, Argument.BOOL),
                           Argument('start', Argument.QS, Argument.FLOAT),
                           Argument('end', Argument.QS, Argument.FLOAT),
                           Argument('limit', Argument.QS, Argument.INT),
                           Argument('offset', Argument.QS, Argument.INT)
                       ])

Jiras: PLAT-8417
-->
